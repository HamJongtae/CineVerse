<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.cinema.dao.CinemaMapper"><!--인터페이스명-자동매핑-->
	<!-- 영화관 등록 -->
	<insert id="insertCinema" parameterType="cinemaVO">
		INSERT INTO cinema(
			c_num,
			c_branch,
			c_location,
			c_address,
			c_phone,
			<!-- c_theater,
			c_seat, -->
			c_parkable)
		VALUES (
			cinema_num.nextval,
			#{c_branch},
			#{c_location},
			#{c_address},
			#{c_phone},
			<!-- #{c_theater},
			#{c_seat}, -->
			#{c_parkable})
	</insert>

	<!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
	 <sql id="cinemaSearch">
	 	<where>
	 		<if test="c_location !=null and c_location != ''">
	 			AND c_location = #{c_location}
	 		</if>	 		
	 	</where>
	 </sql>
	
	<!-- 영화관 총레코드수/검색 레코드수 -->
	 <select id="selectCinemaCount" parameterType="map"  resultType="integer">
	 	SELECT
			COUNT(*)
		FROM cinema
	 	<include refid="cinemaSearch"></include>
	 </select>
	
	 
	<!-- 영화관 전체/검색 목록 -->
	 <select id="selectCinemaList" parameterType="map" resultType="cinemaVO">
	 	SELECT
	 	   *
	    FROM (SELECT
	            a.*,
	            rownum rnum
	          FROM (SELECT
	                  c_num,
	                  c_branch,
	                  c_address,
	                  c_phone,
	                 <!--  c_theater,
	                  c_seat, -->
	                  c_parkable
	                FROM cinema               
	                <include refid="cinemaSearch"></include>
	                )a)
	 	<![CDATA[
	 	WHERE rnum >= #{start} AND rnum <= #{end}
	 	]]>	
 	</select>  
 	
 	
 	<!-- 영화관 정보 수정 --> 
 	<update id="updateCinema" parameterType="cinemaVO">
 		UPDATE cinema SET
 		   c_branch = #{c_branch},
 		   c_location = #{c_location},
 		   c_address = #{c_address},
 		   c_phone = #{c_phone},
 		  <!--  c_theater = #{c_theater},
 		   c_seat = #{c_seat}, -->
 		   c_parkable = #{c_parkable}
 		WHERE c_num = #{c_num}
 	</update>


	
	
	<!-- 상영관 총레코드수/검색 레코드수 -->
	<select id="selectTheaterCountByCinema" parameterType="long" resultType="Integer">
		SELECT COUNT(*)
		FROM theater
		WHERE c_num = #{c_num}
	</select>
	


	<!-- 상영관 목록 조회 -->
	<select id="selectTheaterListByCinemaNum" parameterType="map" resultType="theaterVO">
		SELECT th_name
		FROM theater th
		WHERE th.c_num = #{c_num}
	</select>
 
	
	<!-- 지점명에 해당하는 영화목록 조회 -->
	<select id="getMoviesByCinema" parameterType="long" resultType="movieVO">
        SELECT m.m_name, m.m_code
        FROM movie m
        JOIN cinema_movie cm ON m.m_code = cm.m_code
        JOIN cinema c ON cm.c_num = c.c_num
        WHERE c.c_num = #{c_num}
    </select>
	
	<!-- 영화 시간표 목록 조회 -->
	<select id="selectMovieTimeList" parameterType="object" resultType="movieTimeVO">
		SELECT *
		FROM movie_time m
		JOIN theater t
		ON m.th_num = t.th_num
		WHERE t.c_num = #{c_num} AND m.m_code = #{m_code} AND m.mt_date = #{mt_date}
	</select>
	
	
	<!-- 좌석 선택 페이지에서 선택한 영화 및 지점명 정보 목록 조회 -->
	<select id="selectAllInfoList" parameterType="long" resultType="movieTimeVO">
		SELECT * 
		FROM movie_time 
		JOIN movie USING(m_code) 
		JOIN theater USING(th_num) 
		JOIN cinema USING(c_num)
		WHERE mt_num = #{mt_num}
	</select>
	
	
	<!-- 좌석 선택 페이지에서 선택한 영화 및 지점명 정보 목록 조회 -->
	<select id="selectSeatList" parameterType="long" resultType="seatVO">
		SELECT * 
		FROM seat
	</select>
	
	
	  
	<!-- 새로 만든 예매 페이지 영화목록 조회 -->
	<select id="movieReserveList" parameterType="long" resultType="movieTimeVO">
		SELECT DISTINCT m.m_code, m.m_name, m.rating
		FROM movie_time mt
		JOIN movie m ON m.m_code = mt.m_code
		JOIN theater t ON mt.th_num = t.th_num
		JOIN cinema c ON t.c_num = c.c_num
		WHERE c.c_num = #{c_num}
	</select>
	
	<!-- 예매 페이지 영화목록 정렬순서 -->
	<!-- 예매순 -->
	<select id="getMoviesSortedByReservationRate" parameterType="long" resultType="movieTimeVO">
    SELECT DISTINCT
        m.m_code,
        m.m_name,
        m.rating,
        (SELECT COUNT(*) FROM movie_booking WHERE m_code = m.m_code) * 100.0 / (SELECT COUNT(*) FROM movie_booking) AS reservation_rate
    FROM 
        movie m
    JOIN 
        movie_time mt ON m.m_code = mt.m_code
    JOIN 
        theater t ON mt.th_num = t.th_num
    JOIN 
        cinema c ON t.c_num = c.c_num
    WHERE 
        c.c_num = #{c_num}
    ORDER BY 
        reservation_rate DESC
	</select>
	<!-- 가나다순 -->
	<select id="getMoviesSortedByName" parameterType="long" resultType="movieTimeVO">
	    SELECT DISTINCT m.m_code, m.m_name, m.rating
	    FROM movie_time mt
	    JOIN movie m ON m.m_code = mt.m_code
	    JOIN theater t ON mt.th_num = t.th_num
	    JOIN cinema c ON t.c_num = c.c_num
	    WHERE c.c_num = #{c_num}
	    ORDER BY m.m_name ASC
	</select>
	<!-- 개봉 최신순 -->
	<select id="getDefaultMovieList" parameterType="long" resultType="movieTimeVO">
	    SELECT DISTINCT m.m_code, m.m_name, m.rating, m.m_opendate
	    FROM movie_time mt
	    JOIN movie m ON m.m_code = mt.m_code
	    JOIN theater t ON mt.th_num = t.th_num
	    JOIN cinema c ON t.c_num = c.c_num
	    WHERE c.c_num = #{c_num}
	    ORDER BY m.m_opendate DESC
	</select>
	
	
	
	
	
	
	<!-- 영화시간 등록 페이지 [관리자 전용] -->
	<!-- 상영중인 영화만 목록으로 보여주기 -->
	<select id="insertTimeMovieList"  resultType="movieVO">
		SELECT m_code, m_name
		FROM movie
		WHERE m_status = 1
	</select>
	
	
	<!-- 지점명만 목록으로 보여주기 -->
	<select id="insertTimeCinemaList"  resultType="cinemaVO">
		SELECT c_num, c_branch
		FROM cinema
	</select>
	
	
	<!-- 선택한 지점명에 대한 상영관 보여주기 -->
	<select id="insertTimeTheaterList" parameterType="long" resultType="theaterVO">
		SELECT th_num, th_name
		FROM theater
		WHERE c_num = #{c_num}
	</select>
	
	<!-- 상영시간표 등록 시 시간 중복 체크(동일 시간대 상영 유무 확인) -->
	  <select id="checkOverlap" parameterType="MovieTimeVO" resultType="Integer">
	   	  SELECT COUNT(*)
	      FROM movie_time
	      WHERE th_num = #{th_num}               
	      AND mt_date = #{mt_date}            
	      AND #{mt_start} BETWEEN mt_start AND mt_end
	      OR #{mt_end} BETWEEN mt_start AND mt_end
      </select> 
	
	
	<!-- 영화 상영시간표 조회 [사용자 전용] -->
	<!-- 상영중인 영화목록만 조회 -->
	<select id="showMovieList"  resultType="movieVO">
		SELECT m_code, m_name, rating
		FROM movie
		WHERE m_status = 1
	</select>
	
	<!-- 상영중인 영화목록만 조회 -->
	<select id="showMovieTimeList" parameterType="object" resultType="movieTimeVO">
		SELECT c_branch, mt_date, mt_start, mt_end, th_name
		FROM movie_time 
		JOIN theater USING(th_num)
		JOIN cinema USING(c_num)
		WHERE m_code = #{m_code} AND mt_date = #{mt_date} AND c_location = #{c_location}
	</select>
	
</mapper>							






