<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.assignment.dao.AssignBoardMapper">
	<insert id="ab_insertBoard" parameterType="assignVO">
		INSERT INTO assignment_board (ab_num,ab_title,ab_content,ab_type,ab_price,ab_filename,ab_ip,mem_num, ab_item_status) 
				VALUES (assignment_board_seq.nextval,#{ab_title},#{ab_content},#{ab_type},#{ab_price},#{ab_filename,jdbcType=CLOB},#{ab_ip},#{mem_num}, #{ab_item_status})
	</insert>
	
	<!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->	<!--sub_sql처럼-->
	<sql id="ab_boardSearch">
		<where><!--조건-->
			<if test="keyword != null and keyword != ''">
				ab_title LIKE '%' || #{keyword} || '%' OR mem_id LIKE '%' || #{keyword} || '%' OR ab_content LIKE '%' || #{keyword} || '%'
			</if>
		</where>
	</sql>
	
	
	<!-- 게시판 상세 -->
	<select id="ab_selectBoard">
		SELECT * FROM assignment_board JOIN member USING(mem_num) LEFT OUTER JOIN member_detail USING(mem_num) 
		LEFT OUTER JOIN assign_report USING (ab_num)
		WHERE ab_num=#{ab_num}
		
	</select>
	
	<!-- 게시판 글 총레코드수/검색 레코드수 -->
	<select id="ab_selectRowCount" parameterType="map" resultType="integer">
		SELECT COUNT(*) FROM assignment_board JOIN member USING (mem_num)
		<include refid="ab_boardSearch"></include>
	</select>

	<!-- 게시판 전체 목록/검색 목록 -->
	<select id="ab_selectList" parameterType="map" resultType="assignVO">
		SELECT * FROM
				(SELECT a.*, rownum rnum FROM
								(SELECT 
									ab_num,
									<![CDATA[
									REPLACE(REPLACE(ab_title,'<','&lt;'),'>','&gt;') ab_title,
									]]>
									ab_hit,
									ab_filename,
									ab_reg_date,
									mem_num,
									mem_id,
									mem_nickname,
									ac_cnt,
									bookmark_cnt
								
									FROM assignment_board 
									LEFT OUTER JOIN (SELECT COUNT(*) ac_cnt, ab_num FROM ab_comment GROUP BY ab_num) USING(ab_num)
									LEFT OUTER JOIN (SELECT COUNT(*) bookmark_cnt, ab_num FROM ab_bookmark GROUP BY ab_num) USING(ab_num)
												JOIN member USING(mem_num)
												LEFT OUTER JOIN member_detail USING(mem_num)
												<include refid="ab_boardSearch"></include>
												 ORDER BY ab_reg_date DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 게시판 글 수정 -->
	<update id="ab_updateBoard" parameterType="assignVO">
		UPDATE assignment_board SET
						
							ab_filename = #{ab_filename,jdbcType=CLOB},
						
												ab_title = #{ab_title}, ab_content = #{ab_content}, ab_ip = #{ab_ip}, ab_modify_date = SYSDATE
												WHERE ab_num = #{ab_num}
	</update>
	
	
	
	<!-- 양도글 신고 -->
	<insert id="processReport" parameterType="assignReportVO">
		INSERT INTO assign_report (ar_num, ar_content, ar_category, mem_num, ab_num) 
				VALUES (assign_report_seq.nextval, #{ar_content}, #{ar_category, jdbcType=INTEGER}, #{mem_num}, #{ab_num})
	</insert>
</mapper>							






