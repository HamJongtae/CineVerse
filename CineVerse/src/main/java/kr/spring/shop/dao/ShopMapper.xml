<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="kr.spring.shop.dao.ShopMapper">
	<insert id="registerProduct" parameterType="productVO">
		INSERT INTO product(
			p_num, p_name, p_category, p_content, p_quantity, p_price, p_reg_date, p_filename, p_status 
		) VALUES(
			product_seq.nextval, #{p_name}, #{p_category}, #{p_content}, #{p_quantity}, #{p_price}, SYSDATE, #{p_filename}, #{p_status}
		)
	</insert>
	
	<!-- 상품 검색 -->
	<sql id="productSearch">
	    <where>
	        p_status=2 
	        <!--카테고리가 있다면 카테고리 조건 포함-->
	        <if test="p_category != null and p_category !=''">
	            AND p_category=#{p_category}
	        </if>
	        
	        <!--검색어 있을 때-->
	        <if test="keyword != null and keyword != ''">
	            <!-- AND로 연결-->
	            AND
	            <!-- keyfield 1 : 상품 제목 -->
	            <if test="keyfield == 1">
	                p_name LIKE '%' || #{keyword} || '%'
	            </if>    
	        </if>
	
	        <!-- 수량 조건 -->
	        <if test="p_quantity == 1">
	            AND p_quantity > 0
	        </if>
	    </where>
	</sql>
	
	<!-- 상품 목록 정렬 -->
	<sql id="productOrder">
		<!--최신-->
		<if test="shopOrder==null || shopOrder==1">
			ORDER BY p_reg_date DESC
		</if>
		<!--구매-->
		<if test="shopOrder==2">
			ORDER BY o_cnt DESC NULLS LAST
		</if>
		<!--평점-->
		<if test="shopOrder==3">
			ORDER BY pg_avg DESC NULLS LAST
		</if>
		<!--관심상품-->
		<if test="shopOrder==4">
			ORDER BY pf_cnt DESC NULLS LAST
		</if>
		<if test="shopOrder==5">
			ORDER BY p_price 
		</if>
		<if test="shopOrder==6">
			ORDER BY p_price DESC
		</if>
		<if test="shopOrder==null">
		
		</if>
	</sql>
	
	<!--상품 개수 (총 개수/ 검색 개수)-->
	<select id="productCount">
		SELECT COUNT(*) FROM product
		<include refid="productSearch"></include>
	</select>
	
	<!-- 상품 목록 (총/검색)-->
	<select id="productList" parameterType="map" resultType="productVO">
		SELECT * FROM 
			(SELECT a.*, rownum rnum FROM
				(SELECT p_num,
						<![CDATA[
						REPLACE(REPLACE(p_name,'<','&lt;'),'>','&gt;') p_name,
						]]>
						p_category,
						p_content,
						p_quantity,
						p_price,
						p_reg_date,
						p_modify_date,
						p_filename,
						p_status
						FROM product
						LEFT OUTER JOIN (SELECT COUNT(*) pf_cnt, p_num FROM product_fav GROUP BY p_num) USING(p_num)
						LEFT OUTER JOIN (SELECT COUNT(*) o_cnt, p_num FROM order_detail GROUP BY p_num) USING(p_num)
						LEFT OUTER JOIN (SELECT AVG(pr_grade) pg_avg, p_num FROM product_review GROUP BY p_num) USING(p_num)
							<include refid="productSearch"></include>
							<include refid="productOrder"></include>
							)a)
								<![CDATA[
								WHERE rnum >= #{start} AND rnum <= #{end}
								]]>
	</select>
	
	<insert id="productOrders" parameterType="ordersVO">
		INSERT INTO orders (order_num, mem_num, order_date, a_num) VALUES
		(orders_seq.nextval, #{mem_num}, SYSDATE, #{a_num})
	</insert>
	
	
	
	<!--관리자 상품-->
	<!-- 관리자 상품 검색 -->
	<sql id="adminProductSearch">
		<where>
				<if test="p_category == 1">
					p_category=1 
				</if>
				<if test="p_category == 2">
					p_category=2
				</if>
				<if test="p_category == 3">
					p_category=3 
				</if>
				<if test="p_category == 4">
					p_category=4 
				</if>
				<if test="p_category == 5">
					p_category=5 
				</if>
				<if test="p_category == 6">
					p_category=6 
				</if>
				<if test="p_category == 7">
					p_category=7 
				</if>	
				<if test="p_category == 8">
					p_category=8 
				</if>
			<!--검색어 있을 때-->
			<if test="keyword != null and keyword != ''" >
				<if test="p_category!=null and p_category!=''"> AND </if>
				p_name LIKE '%' || #{keyword} || '%'
			</if>
		</where>
	</sql>
	
	<!-- 관리자 상품 목록 (총/검색)-->
	<select id="adminProductList" parameterType="map" resultType="productVO">
		SELECT * FROM 
			(SELECT a.*, rownum rnum FROM
				(SELECT p_num,
						<![CDATA[
						REPLACE(REPLACE(p_name,'<','&lt;'),'>','&gt;') p_name,
						]]>
						p_category,
						p_content,
						p_quantity,
						p_price,
						p_reg_date,
						p_modify_date,
						p_filename,
						p_status
						FROM product
						LEFT OUTER JOIN (SELECT COUNT(*) pf_cnt, p_num FROM product_fav GROUP BY p_num) USING(p_num)
							<include refid="adminProductSearch"></include>
							)a)
								<![CDATA[
								WHERE rnum >= #{start} AND rnum <= #{end}
								]]>
	</select>
	
	<!-- 관리자 상품 개수 (전체)-->
	<select id="productAllCount">
		SELECT COUNT(*) FROM product
		<include refid="adminProductSearch"></include>
	</select>
	
	<!-- 장바구니에서 선택한 상품 목록 불러오기 -->
	<select id="selectFromPBasket" resultType="pBasketVO">
	    SELECT * FROM p_basket
	    JOIN product USING (p_num)
	    WHERE pb_num IN
	    <foreach item="num" collection="pb_num" open="(" separator="," close=")">
	        #{num}
	    </foreach>
	</select>
	
	<!-- 주문 목록과 대표 상품명, 이미지 가져오기 -->
  <select id="selectOrders" resultType="OrdersVO">
   SELECT o.order_num, o.order_date, o.mem_num, o.order_status, o.order_re_status,o.od_number,
	       sub.od_review_status, 
	       sub.p_name,
	       sub.p_filename
	FROM orders o
	LEFT JOIN (
	    SELECT od.od_review_status, od.order_num, p.p_name, p.p_filename,
	           ROW_NUMBER() OVER (PARTITION BY od.order_num ORDER BY od.od_num) AS rn
	    FROM order_detail od
	    JOIN product p ON od.p_num = p.p_num
	) sub ON o.order_num = sub.order_num AND sub.rn = 1
	WHERE o.mem_num = #{mem_num} order by order_num DESC

  </select>

  <!-- 구매 건의 총 비용 -->
  <select id="howMuch" resultType="OrdersVO">
    SELECT od.order_num, SUM(od.order_quantity * p.p_price) AS total_price
    FROM order_detail od
    JOIN product p ON od.p_num = p.p_num
    JOIN orders o ON od.order_num = o.order_num
    WHERE o.mem_num = #{mem_num}
    GROUP BY od.order_num
  </select>

  <!-- 구매 건의 총 개수 -->
  <select id="howManyQuantity" resultType="OrdersVO">
    SELECT od.order_num, SUM(od.order_quantity) AS total_quantity
    FROM order_detail od
    JOIN orders o ON od.order_num = o.order_num
    WHERE o.mem_num = #{mem_num}
    GROUP BY od.order_num
  </select>
  
   <select id="recommandProduct" resultType="ProductVO" parameterType="long">
        SELECT *
        FROM (
            SELECT *
            FROM product
            WHERE p_category = #{p_category} AND p_status=2
            ORDER BY DBMS_RANDOM.VALUE
        ) 
        WHERE ROWNUM = 2 OR ROWNUM = 1
    </select>
  
    <select id="selectMostCategory" resultType="ProductVO" parameterType="long">
        SELECT p_category
        FROM (
            SELECT p.p_category, COUNT(*) AS category_count
            FROM product p
            JOIN product_fav pf ON p.p_num = pf.p_num
            WHERE pf.mem_num = #{mem_num}
            GROUP BY p.p_category
            ORDER BY category_count DESC
        )
        WHERE ROWNUM = 1
    </select>
	
	<!-- 쿠폰 목록 -->
	<select id="selectMemCouponList" parameterType="long">
		SELECT mc.*, c.*,
		ADD_MONTHS(mc.coupon_regdate, 1) coupon_enddate
		FROM member_coupon mc
		JOIN coupon_db c ON mc.coupon_num = c.coupon_num
		WHERE mc.mem_num = #{mem_num} AND mc.coupon_use=1
	</select>
	
	
	<update id="updateProduct" parameterType="ProductVO">
	    UPDATE product
	    SET
	        p_status = #{p_status},
	        p_category = #{p_category},
	        p_name = #{p_name},
	        p_price = #{p_price},
	        p_quantity = #{p_quantity},
	        p_filename = #{p_filename, jdbcType=VARCHAR},
	        p_content = #{p_content}
	    WHERE
	        p_num=#{p_num}
	</update>

	<!-- 구매 내역 -->
		<!-- 관리자 상품 검색 -->
	<sql id="adminOrderSearch">
		<where>
				<if test="keyfield == 2">
					<if test="keyword != null and keyword != ''" >
						order_num LIKE '%' || #{keyword} || '%'
					</if>		 
				</if>
				<if test="keyfield == 1">
					<if test="keyword != null and keyword != ''" >
						mem_id LIKE '%' || #{keyword} || '%'
					</if>		 
				</if>
			<!--검색어 있을 때-->
			
		</where>
	</sql>
	
	<select id="orderList" resultType="ordersVO">
		SELECT * FROM 
					orders 
						JOIN member USING(mem_num) 
						<include refid="adminOrderSearch"></include>
	</select>
	
	<sql id="adminReviewSearch">
		<where>
				<if test="keyfield == 1">
					<if test="keyword != null and keyword != ''" >
						p_name LIKE '%' || #{keyword} || '%'
					</if>		 
				</if>
				<if test="keyfield == 2">
					<if test="keyword != null and keyword != ''" >
						mem_id LIKE '%' || #{keyword} || '%'
					</if>		 
				</if>
			<!--검색어 있을 때-->
			
		</where>
	</sql>
	
	<select id="selectReviewList">
		SELECT * FROM product_review JOIN product USING(p_num) JOIN order_detail USING (od_num) JOIN orders USING(order_num) JOIN member USING(mem_num)
		<include refid="adminReviewSearch"></include>
	</select>
	
	
 </mapper>