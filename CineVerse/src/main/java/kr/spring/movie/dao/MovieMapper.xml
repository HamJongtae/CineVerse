<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.movie.dao.MovieMapper">
	<!-- 글쓰기 -->
	 <insert id="insertMovie" parameterType="MovieVO">
	 	  INSERT INTO movie (
            m_code,
            m_name,
            m_opendate,
            m_companys,
            m_status,	
            m_filename,
            plot,
            m_content,
            m_genre,
            runtime,
            rating
        ) VALUES (
            #{m_code},
            #{m_name},
            #{m_opendate},
            #{m_companys},
            #{m_status},
            #{m_filename,jdbcType=VARCHAR},
            #{plot},
            #{m_content},
            #{m_genre},
            #{runtime},
            #{rating}
        )
    </insert>

    <!-- movie_actor 테이블에 데이터 삽입 -->
    <insert id="insertMovieActor" parameterType="MovieActorVO">
        INSERT INTO movie_actor (
            m_code,
            actor
        ) VALUES (
            #{m_code},
            #{actor}
        )
    </insert>

    <!-- movie_director 테이블에 데이터 삽입 -->
    <insert id="insertMovieDirector" parameterType="MovieDirectorVO">
        INSERT INTO movie_director (
            m_code,
            director
        ) VALUES (
            #{m_code},
            #{director}
        )
    </insert>

    <!-- movie_genre 테이블에 데이터 삽입 -->
    <insert id="insertMovieGenre" parameterType="MovieGenreVO">
        INSERT INTO movie_genre (
            m_code,
            genre
        ) VALUES (
            #{m_code},
            #{genre}
        )
	 </insert>
	 

	 
	 	 <!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
<sql id="movieSearch">
    <where>
        <if test="m_status != null and m_status != ''">
            m_status = #{m_status}
        </if>
        <if test="keyword != null and keyword != ''">
        	And
        </if>
            <if test="keyfield ==1">
	 			m_name LIKE '%' || #{keyword} || '%'
	 		</if>
        	<if test="keyfield ==2">
	 			<!-- m_code IN (
                        SELECT m_code
                        FROM movie_actor
                        WHERE actor LIKE '%' || #{keyword} || '%'
                    ) -->
                    m_actor LIKE '%' || #{keyword} || '%'

	 			
	 		</if>   
        	 <if test="genres != null and genres.size() > 0">
                AND m_code IN (
                    SELECT m_code
                    FROM movie_genre
                    WHERE genre IN
                    <foreach item="genre" index="index" collection="genres" open="(" separator="," close=")">
                        #{genre}
                    </foreach>
                )
            </if>
    </where>
</sql>
	 <sql id="movieOrder"> <!-- 정렬할 때 -->
	 	<if test="movieorder ==1">
	 		ORDER BY m_code DESC
	 	</if>
	 	<if test="movieorder ==2">
	 		ORDER BY bookmark_cnt DESC NULLS LAST
	 	</if>
	 </sql>
	 
	 <!-- 게시판 글 총레코드 수/검색 레코드 수 -->
	 <select id="selectMovieRowCount" parameterType="map" resultType="integer">
	 	SELECT
	 		COUNT(*)
	 	FROM movie 
	 	<include refid="movieSearch"></include>
	 </select>

    <!-- 게시판 전체 목록/검색 목록 -->
    <select id="selectMovieList" parameterType="map" resultType="MovieVO">
        SELECT
            *
        FROM (SELECT
                    a.*,
                    rownum rnum
                  FROM (SELECT
                          m_code,
                          <![CDATA[
                          REPLACE(REPLACE(m_name,'<','&lt;'),'>','&gt;') m_name,
                          ]]>  
                          m_filename,
                          m_opendate,
                          m_companys,
                          m_status,  
                          m_content,
                          rating
                        FROM movie 
                        LEFT OUTER JOIN (SELECT COUNT (*) bookmark_cnt, m_code FROM movie_bookmark GROUP BY m_code) USING(m_code) <!-- bookmark_cnt는 알리아스 명칭임 이 괄호는 인라인 뷰 -->
                        <!-- JOIN member USING(mem_num) -->
                        <include refid="movieSearch"></include>
                        <include refid="movieOrder"></include>
                        )a) 
        <![CDATA[
        WHERE rnum >= #{start} AND rnum <= #{end}
        ]]>
    </select>
    

        <!-- 게시판 전체 목록/검색 목록 -->
<select id="selectMovieListCurrent" parameterType="map" resultType="MovieVO">
    SELECT
        *
    FROM (SELECT
                a.*,
                rownum rnum
              FROM (SELECT
                      m.m_code,
                      <![CDATA[
                      REPLACE(REPLACE(m.m_name,'<','&lt;'),'>','&gt;') m_name,
                      ]]>  
                      m.m_filename,
                      m.m_opendate,
                      m.m_companys,
                      m.m_status,  
                      m.m_content,
                      m.rating
                    FROM movie m
                    LEFT OUTER JOIN (SELECT COUNT (*) bookmark_cnt, m_code FROM movie_bookmark GROUP BY m_code) b ON m.m_code = b.m_code
                    WHERE m.m_status = 1
                <if test="keyword != null and keyword != ''">
                    AND (m.m_name LIKE '%' || #{keyword} || '%' OR m.m_actor LIKE '%' || #{keyword} || '%')
                </if>
                <if test="genres != null and genres.size() > 0">
                    AND m.m_code IN (
                        SELECT mg.m_code
                        FROM movie_genre mg
                        WHERE mg.genre IN
                        <foreach item="genre" index="index" collection="genres" open="(" separator="," close=")">
                            #{genre}
                        </foreach>
                    )
                </if>
                ORDER BY 
                <if test="movieorder == 1">
                    m.m_code DESC
                </if>
                <if test="movieorder == 2">
                    b.bookmark_cnt DESC NULLS LAST
                </if>
                    )a) 
    <![CDATA[
    WHERE rnum >= #{start} AND rnum <= #{end}
    ]]>
</select>
        <!-- 게시판 전체 목록/검색 목록 -->
    <select id="selectMovieListSchedule" parameterType="map" resultType="MovieVO">
        SELECT
            *
        FROM (SELECT
                    a.*,
                    rownum rnum
                  FROM (SELECT
                          m.m_code,
                          <![CDATA[
                          REPLACE(REPLACE(m.m_name,'<','&lt;'),'>','&gt;') m_name,
                          ]]>  
                          m.m_filename,
                          m.m_opendate,
                          m.m_companys,
                          m.m_status,  
                          m.m_content,
                          m.rating
                        FROM movie m
 						LEFT OUTER JOIN (SELECT COUNT (*) bookmark_cnt, m_code FROM movie_bookmark GROUP BY m_code) b ON m.m_code = b.m_code
                        <![CDATA[ WHERE m.m_opendate > sysdate ]]>
                    <if test="keyword != null and keyword != ''">
                        AND (m.m_name LIKE '%' || #{keyword} || '%' OR m.m_actor LIKE '%' || #{keyword} || '%')
                    </if>
                    <if test="genres != null and genres.size() > 0">
                        AND m.m_code IN (
                            SELECT mg.m_code
                            FROM movie_genre mg
                            WHERE mg.genre IN
                            <foreach item="genre" index="index" collection="genres" open="(" separator="," close=")">
                                #{genre}
                            </foreach>

                        )
                    </if>
                    ORDER BY 
                    <if test="movieorder == 1">
                        m.m_code DESC
                    </if>
                    <if test="movieorder == 2">
                        b.bookmark_cnt DESC NULLS LAST
                    </if>
                        )a) 
        <![CDATA[
        WHERE rnum >= #{start} AND rnum <= #{end}
        ]]>
    </select>
    <!-- 영화 예매 여부 확인 -->
    <select id="getBookingInfo" resultType="kr.spring.movie.vo.MovieBookingVO">
    	<![CDATA[
        SELECT *
        FROM (SELECT *
              FROM movie_booking
              WHERE mem_num = #{mem_num} AND m_code = #{m_code}
              AND EXISTS (
                  SELECT 1
                  FROM movie_time
                  WHERE movie_time.mt_num = movie_booking.mt_num
                  AND (TO_CHAR(movie_time.mt_date, 'YYYYMMDD') < TO_CHAR(SYSDATE, 'YYYYMMDD')
                  OR (TO_CHAR(movie_time.mt_date, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
                  AND movie_time.mt_end <= TO_CHAR(SYSDATE, 'HH24MI')))
              )
              ORDER BY mb_date DESC
        )
        WHERE ROWNUM = 1
        ]]>
    </select>
	<!-- 영화 리뷰 등록 -->
	<insert id="insertReview" parameterType="MovieReviewVO">
		INSERT INTO movie_review(
			mr_num,
			mr_content,
			mr_spoiler,
			mr_grade,
			mb_num,
			m_code,
			mem_num)
		VALUES(
			movie_review_seq.nextval,
			#{mr_content},
			#{mr_spoiler},
			#{mr_grade},
			#{mb_num},
			#{m_code},
			#{mem_num})
	</insert>
	<!-- 리뷰 목록 -->
	<select id="selectMovieListReview" parameterType="map" resultType="MovieReviewVO">
    SELECT
        *
    FROM (SELECT
                a.*,
                rownum rnum
              FROM (SELECT
                      *
                    FROM movie_review
                    JOIN member USING(mem_num)
                    LEFT OUTER JOIN (SELECT mr_num, mem_num click_num 
                                     FROM mr_fav 
                                     WHERE mem_num=#{mem_num}) 
                    USING(mr_num) 
                    LEFT OUTER JOIN (SELECT mr_num, COUNT(*) review_cnt 
                                     FROM mr_fav GROUP BY mr_num)
                    USING(mr_num)
                    WHERE m_code=#{m_code}
                    <if test="order != null and order == 'latest'">
                        ORDER BY mr_regdate DESC
                    </if>
                    <if test="order != null and order == 'recommendation'">
                        ORDER BY review_cnt ASC, mr_regdate DESC
                    </if>
                    ) a)
			<![CDATA[
			WHERE rnum >=#{start} AND rnum <=#{end}
			]]>
	</select>
	

		<!-- 영화 리뷰 신고 등록 -->
	<insert id="insertReviewReport" parameterType="MovieReviewReportVO">
	<selectKey keyProperty="rr_num" resultType="long" order="BEFORE">
        SELECT reviewreport_seq.nextval FROM dual
    </selectKey>
		INSERT INTO reviewreport(
			rr_num,
			rr_type,
			mr_num,
			rr_reportdate
				)
		VALUES(
			#{rr_num},
			#{rr_type},
			#{mr_num},
			SYSDATE)
	</insert>
	<!-- 리뷰 신고 갯수가 5가 넘는 mr_num 구하기 -->
	<select id="getHiddenReviewIds" resultType="Long">
    SELECT mr_num
    FROM reviewreport
    GROUP BY mr_num
    HAVING COUNT(*) >= 5
	</select>
	<!-- 영화 시간표 등록 -->
	 <insert id="insertMovieTime" parameterType="MovieTimeVO">
	 	  INSERT INTO movie_time (
            mt_num,
            mt_date,
            mt_start,
            mt_end,
            m_code,
            th_num) 
            VALUES (
        	movie_time_seq.nextval,
            #{mt_date},
            #{mt_start},
            #{mt_end},
            #{m_code},
            #{th_num})
    </insert>
    
	<select id="selectDistinctGenres" resultType="String">
    <![CDATA[
        SELECT genre 
        FROM (
            SELECT genre, COUNT(*) AS genre_count
            FROM movie_genre
            GROUP BY genre
            ORDER BY genre_count DESC
        )
        WHERE ROWNUM <= 15
    ]]>


	</select>
    <select id="filterMoviesByGenres" parameterType="list" resultType="kr.spring.movie.vo.MovieVO">
         SELECT *
		    FROM movie
		    WHERE m_code IN (
		        <foreach item="genre" index="index" collection="genres" open="" separator="INTERSECT" close="">
		            SELECT m_code
		            FROM movie_genre
		            WHERE genre = #{genre}
		        </foreach>
		    )
    </select>
        <select id="filterMoviesByGenres2" parameterType="list" resultType="kr.spring.movie.vo.MovieVO">
         SELECT *
		    FROM movie
		    WHERE m_code 
		    IN (
		        <foreach item="genre" index="index" collection="genres" open="" separator="INTERSECT" close="">
		            SELECT m_code
		            FROM movie_genre
		            WHERE genre = #{genre}
		        </foreach>
		    )AND m_status = 1
    </select>
    
    <select id="filterMoviesByGenres3" parameterType="list" resultType="kr.spring.movie.vo.MovieVO">
         SELECT *
		    FROM movie
		    WHERE m_code 
		    IN (
		        <foreach item="genre" index="index" collection="genres" open="" separator="INTERSECT" close="">
		            SELECT m_code
		            FROM movie_genre
		            WHERE genre = #{genre}
		        </foreach>
		    )<![CDATA[ AND m_opendate > sysdate ]]> 
    </select>
    
    
</mapper>							






