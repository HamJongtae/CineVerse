<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.movie.dao.MovieMapper">
	<!-- 글쓰기 -->
	 <insert id="insertMovie" parameterType="MovieVO">
	 	  INSERT INTO movie (
            m_code,
            m_name,
            m_opendate,
            m_companys,
            m_status,
            m_filename,
            m_content
        ) VALUES (
            #{m_code},
            #{m_name},
            #{m_opendate},
            #{m_companys},
            #{m_status},
            #{m_filename},
            #{m_content}
        )
    </insert>

    <!-- movie_actor 테이블에 데이터 삽입 -->
    <insert id="insertMovieActor" parameterType="MovieActorVO">
        INSERT INTO movie_actor (
            m_code,
            actor
        ) VALUES (
            #{m_code},
            #{actor}
        )
    </insert>

    <!-- movie_director 테이블에 데이터 삽입 -->
    <insert id="insertMovieDirector" parameterType="MovieDirectorVO">
        INSERT INTO movie_director (
            m_code,
            director
        ) VALUES (
            #{m_code},
            #{director}
        )
    </insert>

    <!-- movie_genre 테이블에 데이터 삽입 -->
    <insert id="insertMovieGenre" parameterType="MovieGenreVO">
        INSERT INTO movie_genre (
            m_code,
            genre
        ) VALUES (
            #{m_code},
            #{genre}
        )
	 </insert>
	 

	 
	 	 <!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
	 <sql id="movieSearch"> <!-- 검색할 떄 -->
	 	<where>
	 		<if test="m_status != null and m_status != ''"> <!-- status가 있을 때 where절과 카테고리값 생성 -->
	 			m_status = #{m_status}
	 		</if>
	 		<!-- 검색어가 있을 때만 호출 -->
	 		<if test="keyword !=null and keyword !=''">
	 			And
	 		</if>
	 		<!-- 1:영화이름 -->
	 		<if test="keyfield ==1">
	 			m_name LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<!-- 2:상영일 -->
	 		<if test="keyfield ==2">
	 			m_opendate LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<!-- 3:제작사 -->
	 		<if test="keyfield ==3">
	 			m_companys LIKE '%' || #{keyword} || '%'
	 		</if>

	 	</where>
	 </sql>
	 <sql id="movieOrder"> <!-- 정렬할 때 -->
	 	<if test="movieorder ==1">
	 		ORDER BY m_code DESC
	 	</if>
	 	<if test="movieorder ==2">
	 		ORDER BY bookmark_cnt DESC NULLS LAST
	 	</if>
	 	<if test="movieorder ==3">
	 		ORDER BY m_opendate DESC NULLS LAST
	 	</if>
	 </sql>
	 
	 <!-- 게시판 글 총레코드 수/검색 레코드 수 -->
	 <select id="selectMovieRowCount" parameterType="map" resultType="integer">
	 	SELECT
	 		COUNT(*)
	 	FROM movie 
	 	<include refid="movieSearch"></include>
	 </select>
	 <!-- 게시판 전체 목록/검색 목록 -->
	 <select id="selectMovieList" parameterType="map" resultType="movieVO">
	 
	 
	 	SELECT
	 		*
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		  FROM (SELECT
	 		  		  m_code,
	 		  		  <![CDATA[
	 		  		  REPLACE(REPLACE(m_name,'<','&lt;'),'>','&gt;') m_name,
	 		  		  ]]>  
	 		  		  m_filename,
	 		  		  m_opendate,
	 		  		  m_companys,
	 		  		  m_status,  
	 		  		  m_content
	 		  		FROM movie 
	 		  		LEFT OUTER JOIN (SELECT COUNT (*) bookmark_cnt, m_code FROM movie_bookmark GROUP BY m_code) USING(m_code) <!-- bookmark_cnt는 알리아스 명칭임 이 괄호는 인라인 뷰 -->
	 		  		<!-- JOIN member USING(mem_num) -->
	 		  		<include refid="movieSearch"></include>
	 		  		<include refid="movieOrder"></include>
	 		  		)a) 
	<![CDATA[
	WHERE rnum >= #{start} AND rnum <= #{end}
	]]>
	</select>
	
	<insert id="insertReview" parameterType="MovieReviewVO">
		INSERT INTO movie_review(
			mr_num,
			mr_content,
			mr_spoiler,
			mr_grade,
			md_num,
			m_code,
			mem_num)
		VALUES(
			movie_review_seq.nextval,
			#{mr_content},
			#{mr_spoiler},
			#{mr_grade},
			#{md_num},
			#{m_code},
			#{mem_num})
	</insert>
	<!-- 영화 시간표 등록 -->
	 <insert id="insertMovieTime" parameterType="MovieTimeVO">
	 	  INSERT INTO movie_time (
            mt_num,
            mt_date,
            mt_start,
            mt_end,
            m_code,
            c_num) 
            VALUES (
        	movie_time_seq.nextval,
            #{mt_date},
            #{mt_start},
            #{mt_end},
            #{m_code},
            #{c_num})
    </insert>
    
 <!-- 예매 여부 확인 쿼리 -->
   <select id="hasBookedMovie" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM movie_booking mb
        JOIN mb_detail md ON mb.mb_num = md.mb_num
        WHERE mb.mem_num = #{mem_num} AND md.m_code = #{m_code}
    </select>

    <insert id="addMovieReview" parameterType="kr.spring.movie.vo.MovieReviewVO">
        INSERT INTO movie_review (mr_num, mr_content, mr_regdate, mr_spoiler, mr_grade, md_num, m_code, mem_num)
        VALUES (movie_review_seq.nextval, #{mr_content}, SYSDATE, #{mr_spoiler}, #{mr_grade}, #{md_num}, #{m_code}, #{mem_num})
    </insert>

    <select id="getMovieReviews" parameterType="map" resultType="kr.spring.movie.vo.MovieReviewVO">
        <![CDATA[
        SELECT * FROM (
            SELECT a.*, ROWNUM rnum
            FROM (
                SELECT * FROM movie_review
                WHERE m_code = #{m_code}
                ORDER BY mr_regdate DESC
            ) a
            WHERE ROWNUM <= #{offset} + #{limit}
        )
        WHERE rnum > #{offset}
        ]]>
    </select>

    <select id="getBookingDetailNum" parameterType="map" resultType="java.lang.Long">
        <![CDATA[
        SELECT md.md_num
        FROM movie_booking mb
        JOIN mb_detail md ON mb.mb_num = md.mb_num
        WHERE mb.mem_num = #{mem_num} AND md.m_code = #{m_code}
        ]]>
    </select>
</mapper>							






